apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
//apply plugin: 'com.github.dcendents.android-maven'
//apply plugin: 'com.jfrog.bintray'

android {
    compileSdkVersion Integer.parseInt(COMPILE_SDK_VERSION)
    buildToolsVersion BUILD_TOOLS_VERSION

    defaultConfig {
        minSdkVersion MIN_SDK_VERSION
        targetSdkVersion TARGET_SDK_VERSION
        versionCode Integer.parseInt(VERSION_CODE)
        versionName VERSION_NAME
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}
//apply from: "bintrayUpload.gradle"
//apply from: "https://raw.githubusercontent.com/xiaopansky/android-library-publish-to-jcenter/master/bintrayUpload.gradle"
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    api 'com.github.bumptech.glide:glide:3.7.0'
    api "com.android.support:appcompat-v7:${AndroidSupportVersion}"
    api "com.android.support:recyclerview-v7:${AndroidSupportVersion}"
    api('com.commit451:PhotoView:1.2.4') {
        exclude module: 'support-v4'
        exclude module: 'support-annotations'
        exclude module: 'support-v13'
    }
    implementation project(':..:BaseProject:Lib_Util')
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
repositories {
    mavenCentral()
}
//
//// load properties
//Properties properties = new Properties()
//File localPropertiesFile = project.file("local.properties");
//if(localPropertiesFile.exists()){
//    properties.load(localPropertiesFile.newDataInputStream())
//}
//File projectPropertiesFile = project.file("project.properties");
//if(projectPropertiesFile.exists()){
//    properties.load(projectPropertiesFile.newDataInputStream())
//}
//
//// read properties
//def projectName = properties.getProperty("project.name")
//def projectGroupId = properties.getProperty("project.groupId")
//def projectArtifactId = properties.getProperty("project.artifactId")
//def projectVersionName = android.defaultConfig.versionName
//def projectPackaging = properties.getProperty("project.packaging")
//def projectSiteUrl = properties.getProperty("project.siteUrl")
//def projectGitUrl = properties.getProperty("project.gitUrl")
//
//def developerId = properties.getProperty("developer.id")
//def developerName = properties.getProperty("developer.name")
//def developerEmail = properties.getProperty("developer.email")
//
//def bintrayUser = properties.getProperty("bintray.user")
//def bintrayApikey = properties.getProperty("bintray.apikey")
//
//def javadocName = properties.getProperty("javadoc.name")
//
//group = projectGroupId
//
//// This generates POM.xml with proper parameters
//install {
//    repositories.mavenInstaller {
//        pom {
//            project {
//                name projectName
//                groupId projectGroupId
//                artifactId projectArtifactId
//                version projectVersionName
//                packaging projectPackaging
//                url projectSiteUrl
//                licenses {
//                    license {
//                        name 'The Apache Software License, Version 2.0'
//                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
//                    }
//                }
//                developers {
//                    developer {
//                        id developerId
//                        name developerName
//                        email developerEmail
//                    }
//                }
//                scm {
//                    connection projectGitUrl
//                    developerConnection projectGitUrl
//                    url projectSiteUrl
//                }
//            }
//        }
//    }
//}
//
//// This generates sources.jar
//task sourcesJar(type: Jar) {
//    from android.sourceSets.main.java.srcDirs
//    classifier = 'sources'
//}
//
//task javadoc(type: Javadoc) {
//    source = android.sourceSets.main.java.srcDirs
//    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
//}
//
//// This generates javadoc.jar
//task javadocJar(type: Jar, dependsOn: javadoc) {
//    classifier = 'javadoc'
//    from javadoc.destinationDir
//}
//
//artifacts {
//    archives javadocJar
//    archives sourcesJar
//}
//
//// javadoc configuration
//javadoc {
//    options{
//        encoding "UTF-8"
//        charSet 'UTF-8'
//        author true
//        version projectVersionName
//        links "http://docs.oracle.com/javase/7/docs/api"
//        title javadocName
//    }
//}
//
//// bintray configuration
//bintray {
//    user = bintrayUser
//    key = bintrayApikey
//    configurations = ['archives']
//    pkg {
//        repo = "maven"
//        name = projectName
//        websiteUrl = projectSiteUrl
//        vcsUrl = projectGitUrl
//        licenses = ["Apache-2.0"]
//        publish = true
//    }
//}
//apply plugin: 'groovy'